{"version":3,"sources":["src/index.js"],"names":["showWeather","response","temper","document","querySelector","city","temperature","Math","round","data","main","temp","innerHTML","name","concat","retrievePosition","position","lat","coords","latitude","lon","longitude","url","axios","get","then","output","event","preventDefault","city_name","value","form","addEventListener","navigator","geolocation","getCurrentPosition","now","Date","days","day_time","day_","getDay","hour","getHours","toString","min","getMinutes"],"mappings":";AAAA,SAASA,EAAYC,GACnB,IAAIC,EAASC,SAASC,cAAc,WAChCC,EAAOF,SAASC,cAAc,SAC9BE,EAAcC,KAAKC,MAAMP,EAASQ,KAAKC,KAAKC,MAChDN,EAAKO,UAAYX,EAASQ,KAAKI,KAC/BX,EAAOU,UAASE,GAAAA,OAAMR,EAAc,KAGtC,SAASS,EAAiBC,GACxB,IACIC,EAAMD,EAASE,OAAOC,SACtBC,EAAMJ,EAASE,OAAOG,UACtBC,EAAGR,uDAAAA,OAA0DG,EAAGH,SAAAA,OAAQM,EAAGN,wBAAAA,OAHlE,oCAIbS,MAAMC,IAAIF,GAAKG,KAAKzB,GAKtB,SAAS0B,EAAOC,GACdA,EAAMC,iBACN,IAAIC,EAAY1B,SAASC,cAAc,oBAE5BD,SAASC,cAAc,SAE7BQ,UAAYiB,EAAUC,MAG7B,IAAIC,EAAO5B,SAASC,cAAc,QAClC2B,EAAKC,iBAAiB,SAAUN,GAEhCO,UAAUC,YAAYC,mBAAmBpB,GAEzC,IAAIqB,EAAM,IAAIC,KACVC,EAAO,CACT,SACA,SACA,UACA,YACA,WACA,SACA,YAEEC,EAAWpC,SAASC,cAAc,aAClCoC,EAAOF,EAAKF,EAAIK,UAChBC,EAAON,EAAIO,WAEbD,EADEA,GAAQ,EACH,IAAMA,EAAKE,WAEXF,EAAKE,WAEd,IAAIC,EAAMT,EAAIU,aAEZD,EADEA,GAAO,EACH,IAAMA,EAAID,WAEVC,EAAID,WAGZL,EAAS3B,UAASE,GAAAA,OAAM0B,EAAI1B,KAAAA,OAAI4B,EAAI5B,KAAAA,OAAI+B","file":"src.7139ef15.js","sourceRoot":"..","sourcesContent":["function showWeather(response) {\n  let temper = document.querySelector(\"#temper\");\n  let city = document.querySelector(\"#city\");\n  let temperature = Math.round(response.data.main.temp);\n  city.innerHTML = response.data.name;\n  temper.innerHTML = `${temperature}Â°`;\n}\n\nfunction retrievePosition(position) {\n  let apiKey = \"5f472b7acba333cd8a035ea85a0d4d4c\";\n  let lat = position.coords.latitude;\n  let lon = position.coords.longitude;\n  let url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${apiKey}`;\n  axios.get(url).then(showWeather);\n}\n\n//navigator.geolocation.getCurrentPosition(retrievePosition);\n\nfunction output(event) {\n  event.preventDefault();\n  let city_name = document.querySelector(\"#inpit_city_name\");\n\n  let city = document.querySelector(\"#city\");\n  //console.log(city_name.value, city.value);\n  city.innerHTML = city_name.value;\n}\n\nlet form = document.querySelector(\"form\");\nform.addEventListener(\"submit\", output);\n\nnavigator.geolocation.getCurrentPosition(retrievePosition);\n\nlet now = new Date();\nlet days = [\n  \"Sunday\",\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\"\n];\nlet day_time = document.querySelector(\"#day_time\");\nlet day_ = days[now.getDay()];\nlet hour = now.getHours();\nif (hour <= 9) {\n  hour = \"0\" + hour.toString();\n} else {\n  hour = hour.toString();\n}\nlet min = now.getMinutes();\nif (min <= 9) {\n  min = \"0\" + min.toString();\n} else {\n  min = min.toString();\n}\n\nday_time.innerHTML = `${day_} ${hour}:${min}`;\n"]}